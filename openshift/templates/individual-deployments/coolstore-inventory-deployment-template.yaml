apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
metadata:
  annotations:
    description: CoolStore demo microservices deployments persistent template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: coolstore-inventory-deployment
objects:
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: default_edit
  roleRef:
    name: view
  subjects:
    - kind: ServiceAccount
      name: default
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: inventory
    labels:
      application: inventory
  spec:
    tags:
      - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: inventory
    labels:
      application: inventory
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: inventory:latest
    source:
      contextDir: inventory-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: jboss-eap70-openshift:1.5
          namespace: openshift
      type: Source
    triggers:
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: inventory
    labels:
      application: inventory
  spec:
    replicas: 1
    selector:
      deploymentconfig: inventory
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: inventory
          deploymentconfig: inventory
        name: inventory
      spec:
        containers:
          - env:
              - name: OPENSHIFT_KUBE_PING_LABELS
                value: application=inventory
              - name: OPENSHIFT_KUBE_PING_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: MQ_CLUSTER_PASSWORD
                value: 7mzX0pLV03
              - name: JGROUPS_CLUSTER_PASSWORD
                value: CqUo3fYDTv
              - name: AUTO_DEPLOY_EXPLODED
                value: "false"
              - name: DB_SERVICE_PREFIX_MAPPING
                value: inventory-postgresql=DB
              - name: DB_JNDI
                value: java:jboss/datasources/InventoryDS
              - name: DB_USERNAME
                value: ${INVENTORY_DB_USERNAME}
              - name: DB_PASSWORD
                value: ${INVENTORY_DB_PASSWORD}
              - name: DB_DATABASE
                value: inventorydb
            image: inventory
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                exec:
                  command:
                    - /opt/eap/bin/jboss-cli.sh
                    - -c
                    - :shutdown(timeout=60)
            livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 5
            name: inventory
            ports:
              - containerPort: 8778
                name: jolokia
                protocol: TCP
              - containerPort: 8080
                name: http
                protocol: TCP
              - containerPort: 8888
                name: ping
                protocol: TCP
            readinessProbe:
              failureThreshold: 5
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 15
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                memory: 1Gi
              requests:
                memory: 512Mi
            terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - inventory
          from:
            kind: ImageStreamTag
            name: inventory:latest
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"inventory-postgresql","namespace":"","kind":"Service"}]'
    labels:
      app: inventory
      application: inventory
    name: inventory
  spec:
    ports:
      - port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: inventory
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: inventory-postgresql
    labels:
      application: inventory
  spec:
    replicas: 1
    selector:
      deploymentconfig: inventory-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: inventory
          deploymentconfig: inventory-postgresql
        name: inventory-postgresql
      spec:
        containers:
          - env:
              - name: POSTGRESQL_USER
                value: ${INVENTORY_DB_USERNAME}
              - name: POSTGRESQL_PASSWORD
                value: ${INVENTORY_DB_PASSWORD}
              - name: POSTGRESQL_DATABASE
                value: inventorydb
            image: postgresql
            imagePullPolicy: IfNotPresent
            name: inventory-postgresql
            volumeMounts:
              - mountPath: /var/lib/pgsql/data
                name: inventory-postgresql-data
            ports:
              - containerPort: 5432
                protocol: TCP
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - -i
                  - -c
                  - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
        terminationGracePeriodSeconds: 60
        volumes:
          - name: inventory-postgresql-data
            emptyDir: {}
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - inventory-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:latest
            namespace: openshift
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: inventory
      application: inventory
    name: inventory-postgresql
  spec:
    ports:
      - port: 5432
        targetPort: 5432
    selector:
      deploymentconfig: inventory-postgresql
parameters:
- description: CoolStore application image version to be deployed (imagestreams should exist)
  displayName: CoolStore image version
  name: APP_VERSION
  required: true
  value: latest
- description: Hostname suffix used for routes e.g. cart-<HOSTNAME_SUFFIX> inventory-<HOSTNAME_SUFFIX>
  displayName: Hostname suffix used for routes
  name: HOSTNAME_SUFFIX
  required: true
- description: Inventory Service database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: INVENTORY_DB_USERNAME
  required: true
- description: Inventory Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: INVENTORY_DB_PASSWORD
  required: true
- description: Catalog Service database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: CATALOG_DB_USERNAME
  required: true
- description: Catalog Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: CATALOG_DB_PASSWORD
  required: true
- description: Decision Server Username
  name: KIE_SERVER_USER
  required: true
  value: brmsAdmin
- description: Decision Server Password
  from: '[a-zA-Z]{6}[0-9]{1}!'
  generate: expression
  name: KIE_SERVER_PASSWORD
  required: true
- description: Decision Server Coolstore Rules Container Spec
  name: KIE_CONTAINER_DEPLOYMENT
  required: true
  value: CoolStoreRulesContainer=com.redhat:coolstore:2.0.0