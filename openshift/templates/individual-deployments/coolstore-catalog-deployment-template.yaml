apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
metadata:
  annotations:
    description: CoolStore demo microservices deployments persistent template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: coolstore-inventory-deployment
objects:
  # Catalog Service
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog
    labels:
      application: catalog
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: catalog
          deploymentconfig: catalog
        name: catalog
      spec:
        containers:
          - env:
              - name: JWS_ADMIN_USERNAME
                value: Skq3VtCd
              - name: JWS_ADMIN_PASSWORD
                value: oktt6yhw
              - name: DB_USERNAME
                value: ${CATALOG_DB_USERNAME}
              - name: DB_PASSWORD
                value: ${CATALOG_DB_PASSWORD}
              - name: DB_NAME
                value: catalogdb
              - name: DB_SERVER
                value: catalog-mongodb
            image: catalog
            imagePullPolicy: IfNotPresent
            name: catalog
            ports:
              - containerPort: 8778
                name: jolokia
                protocol: TCP
              - containerPort: 8080
                name: http
                protocol: TCP
            readinessProbe:
              failureThreshold: 10
              exec:
                command:
                  - /bin/bash
                  - -c
                  - curl -s -u Skq3VtCd:oktt6yhw 'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                    |grep -iq 'stateName *= *STARTED'
              initialDelaySeconds: 15
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - catalog
          from:
            kind: ImageStreamTag
            name: catalog:${APP_VERSION}
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"catalog-mongodb","namespace":"coolstore-test-analytics-portability","kind":"Service"}]'
    labels:
      app: catalog
      application: catalog
    name: catalog
  spec:
    ports:
      - port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: catalog
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: catalog
    name: catalog
  spec:
    host: catalog-${HOSTNAME_SUFFIX}
    to:
      kind: Service
      name: catalog
      weight: 100
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: catalog
      application: catalog
    name: catalog-mongodb
  spec:
    ports:
      - name: mongo
        port: 27017
        protocol: TCP
        targetPort: 27017
    selector:
      deploymentconfig: catalog-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: catalog
    name: catalog-mongodb
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog-mongodb
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: catalog
          deploymentconfig: catalog-mongodb
      spec:
        containers:
          - env:
              - name: KUBERNETES_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: MONGODB_USER
                value: ${CATALOG_DB_USERNAME}
              - name: MONGODB_PASSWORD
                value: ${CATALOG_DB_PASSWORD}
              - name: MONGODB_DATABASE
                value: catalogdb
              - name: MONGODB_ADMIN_PASSWORD
                value: ${CATALOG_DB_PASSWORD}
            image: mongodb
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 27017
              timeoutSeconds: 1
            name: catalog-mongodb
            ports:
              - containerPort: 27017
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - -i
                  - -c
                  - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                    --eval="quit()"
              failureThreshold: 3
              initialDelaySeconds: 3
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 256Mi
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
              - mountPath: /var/lib/mongodb/data
                name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: mongodb-data
            persistentVolumeClaim:
              claimName: mongodb-data-pv
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - catalog-mongodb
          from:
            kind: ImageStreamTag
            name: mongodb:3.2
            namespace: openshift
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: catalog
    name: mongodb-data-pv
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
parameters:
- description: CoolStore application image version to be deployed (imagestreams should exist)
  displayName: CoolStore image version
  name: APP_VERSION
  required: true
  value: latest
- description: Hostname suffix used for routes e.g. cart-<HOSTNAME_SUFFIX> inventory-<HOSTNAME_SUFFIX>
  displayName: Hostname suffix used for routes
  name: HOSTNAME_SUFFIX
  required: true
- description: Inventory Service database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: INVENTORY_DB_USERNAME
  required: true
- description: Inventory Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: INVENTORY_DB_PASSWORD
  required: true
- description: Catalog Service database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: CATALOG_DB_USERNAME
  required: true
- description: Catalog Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: CATALOG_DB_PASSWORD
  required: true
- description: Decision Server Username
  name: KIE_SERVER_USER
  required: true
  value: brmsAdmin
- description: Decision Server Password
  from: '[a-zA-Z]{6}[0-9]{1}!'
  generate: expression
  name: KIE_SERVER_PASSWORD
  required: true
- description: Decision Server Coolstore Rules Container Spec
  name: KIE_CONTAINER_DEPLOYMENT
  required: true
  value: CoolStoreRulesContainer=com.redhat:coolstore:2.0.0